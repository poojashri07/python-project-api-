import requests

class WeatherAPI:
    def __init__(self, api_key):
        self.api_key = api_key
        self.base_url = "https://api.openweathermap.org/data/2.5/weather"
    
    def get_weather_by_city_name(self, city_name):
        params = {'q': city_name, 'appid': self.api_key, 'units': 'metric'}
        return self._get_weather(params)
    
    def get_weather_by_coordinates(self, lat, lon):
        params = {'lat': lat, 'lon': lon, 'appid': self.api_key, 'units': 'metric'}
        return self._get_weather(params)
    
    def _get_weather(self, params):
        try:
            response = requests.get(self.base_url, params=params)
            response.raise_for_status()
            return response.json()
        except requests.exceptions.RequestException as e:
            print(f"Error fetching data: {e}")
            return None

class WeatherApp:
    def __init__(self, api_key):
        self.api = WeatherAPI(api_key)
    
    def run(self):
        print("Welcome to the Real-Time Weather Monitoring System!")
        print("Enter 'quit' at any time to exit.\n")
        
        while True:
            location = input("Enter city name or coordinates (latitude,longitude): ").strip()
            
            if location.lower() == 'quit':
                break
            
            weather_data = self.fetch_weather(location)
            if weather_data:
                self.display_weather(weather_data)
            else:
                print("Failed to fetch weather data. Please try again.\n")
    
    def fetch_weather(self, location):
        if self._is_valid_coordinates(location):
            lat, lon = location.split(',')
            return self.api.get_weather_by_coordinates(lat.strip(), lon.strip())
        else:
            return self.api.get_weather_by_city_name(location)
    
    def display_weather(self, weather_data):
        print(f"Weather in {weather_data['name']} ({weather_data['sys']['country']}):")
        print(f"Temperature: {weather_data['main']['temp']}Â°C")
        print(f"Weather: {weather_data['weather'][0]['description'].capitalize()}")
        print(f"Humidity: {weather_data['main']['humidity']}%")
        print(f"Wind Speed: {weather_data['wind']['speed']} m/s\n")
    
    def _is_valid_coordinates(self, location):
        parts = location.split(',')
        if len(parts) == 2:
            try:
                lat = float(parts[0])
                lon = float(parts[1])
                return True
            except ValueError:
                pass
        return False

if __name__ == "__main__":
    API_KEY = 'fe1fb635f6a319191b58ab07034c74c9'
    app = WeatherApp(API_KEY)
    app.run()
